{"version":3,"sources":["components/Header/images/logo.png","components/Header/images/hedwig.png","components/Header/index.js","components/Filters/index.js","components/CharacterList/index.js","components/CharacterCard/components/CardDetail.js","components/CharacterCard/components/CardNavigation.js","components/CharacterCard/index.js","components/Footer/index.js","App.js","services/fetchCharacters.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","Logo","alt","Hedwig","Component","Filters","action","this","props","htmlFor","type","id","placeholder","onChange","CharacterList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","houseStylesMatcher","bind","assertThisInitialized","house","classHouse","_this2","_this$props","characters","inputValue","paintCharacters","filter","item","name","toLowerCase","includes","map","concat","key","react_router_dom","to","image","length","CardDetail","houseDetailMatcher","param","characterSelected","find","parseInt","react","hogwartsStaff","hogwartsStudent","patronus","yearOfBirth","undefined","alive","CardNavigation","previuosCharacter","nextCharacter","currentCharacter","CharacterCard","resetInputValue","CharacterCard_components_CardDetail","CharacterCard_components_CardNavigation","Footer","href","target","rel","App","state","getCharacters","handleInputChange","fetch","then","res","json","data","finalData","index","objectSpread","setState","event","triggerValue","currentTarget","value","_this3","_this$state","components_Header","react_router","exact","path","render","components_Filters","components_CharacterList","paramPicker","components_CharacterCard","match","params","character","components_Footer","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.265921cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a0566dac.png\";","module.exports = __webpack_public_path__ + \"static/media/hedwig.50c0ebe1.png\";","import React, { Component } from 'react';\nimport Logo from './images/logo.png';\nimport Hedwig from './images/hedwig.png';\nimport './Header.scss';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <h1 className=\"title-hogwarts\">\n          <img\n            className=\"title-logo\"\n            src={Logo}\n            alt=\"Harry Potter\"\n          />\n          <span className=\"title-finder\">\n            finder\n          </span>\n          <img\n            className=\"hedwig\"\n            src={Hedwig}\n            alt=\"Hedwig eyes\"\n          />\n        </h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Filters.scss';\n\nclass Filters extends Component {\n  render() {\n    const { action } = this.props;\n    return (\n      <form\n        action=\"\"\n        className=\"form-search\"\n      >\n        <label\n          htmlFor=\"characters-finder\"\n          className=\"label-search\"\n        >\n          Look for your favourite character or house\n        </label>\n        <input\n          type=\"text\"\n          id=\"characters-finder\"\n          placeholder=\"Look for character or house\"\n          className=\"input-search\"\n          onChange={action}\n        />\n      </form>\n    );\n  }\n}\n\nFilters.propTypes = {\n  action: PropTypes.func,\n};\n\nexport default Filters;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './CharacterList.scss';\n\nclass CharacterList extends Component {\n  constructor(props) {\n    super(props);\n    this.houseStylesMatcher = this.houseStylesMatcher.bind(this);\n  }\n\n  houseStylesMatcher(house) {\n    let classHouse = 'card-default';\n    if (house === 'Gryffindor') {\n      return classHouse = 'card-gryffindor';\n    } else if (house === 'Slytherin') {\n      return classHouse = 'card-slytherin';\n    } else if (house === 'Ravenclaw') {\n      return classHouse = 'card-ravenclaw';\n    } else if (house === 'Hufflepuff') {\n      return classHouse = 'card-hufflepuff';\n    }\n    return classHouse;\n  }\n\n  render() {\n    const { characters, inputValue } = this.props;\n    const paintCharacters =\n      characters\n        .filter(item => item.name.toLowerCase().includes(inputValue) ||\n          item.house.toLowerCase().includes(inputValue))\n        .map(item => {\n          return (\n            <li\n              className={`card-character ${this.houseStylesMatcher(item.house)}`}\n              key={item.id}>\n              <Link\n                className=\"link-character\"\n                to={`/detail/${item.id}`}>\n                <div className=\"img-wrapper-character\">\n                  <img\n                    className=\"img-character\"\n                    src={item.image}\n                    alt={item.name}\n                  />\n                </div>\n                <small className=\"detail-character\">\n                  ver detalle\n            </small>\n                <h2 className=\"name-character\">\n                  {item.name}\n                </h2>\n                <h3 className=\"house-character\">\n                  {item.house}\n                </h3>\n              </Link>\n            </li>\n          )\n        });\n    return (\n      <ol className=\"list-characters\">\n        {paintCharacters.length === 0 && inputValue !== '' ?\n          <li className=\"try-again\">Prueba otra vez ;&#41;</li>\n          :\n          paintCharacters\n        }\n      </ol>\n    );\n  }\n}\n\nCharacterList.propTypes = {\n  characters: PropTypes.array,\n  inputValue: PropTypes.string,\n};\n\nexport default CharacterList;","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport './CardDetail.scss';\n\nclass CardDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.houseDetailMatcher = this.houseDetailMatcher.bind(this);\n  }\n\n  houseDetailMatcher(house) {\n    let classHouse = 'detail-default';\n    if (house === 'Gryffindor') {\n      return classHouse = 'detail-gryffindor';\n    } else if (house === 'Slytherin') {\n      return classHouse = 'detail-slytherin';\n    } else if (house === 'Ravenclaw') {\n      return classHouse = 'detail-ravenclaw';\n    } else if (house === 'Hufflepuff') {\n      return classHouse = 'detail-hufflepuff';\n    }\n    return classHouse;\n  }\n\n  render() {\n    const { param, characters } = this.props;\n    const characterSelected =\n      characters.find(item => item.id === parseInt(param));\n\n    return (\n      <Fragment>\n\n        {characterSelected ?\n          <div className=\"card-list-wrapper\">\n            <ol className={`list-card ${this.houseDetailMatcher(characterSelected.house)}`}>\n              <img\n                className=\"img-card\"\n                src={characterSelected.image}\n                alt={characterSelected.name}\n              />\n              <div className=\"data-card\">\n                {characterSelected.name ?\n                  <li className=\"name-card\">\n                    {characterSelected.name}\n                  </li>\n                  :\n                  null\n                }\n                {characterSelected.hogwartsStaff ?\n                  <li className=\"category-card\">\n                    <small>{'Emplead@ en Hogwarts'}</small>\n                  </li>\n                  :\n                  null\n                }\n                {characterSelected.hogwartsStudent ?\n                  <li className=\"category-card\">\n                    <small>{'Estudiante'}</small>\n                  </li>\n                  :\n                  null\n                }\n                {characterSelected.house ?\n                  <li className=\"house-card\">\n                    Casa: {characterSelected.house}\n                  </li>\n                  :\n                  null\n                }\n                {characterSelected.patronus ?\n                  <li className=\"patronus-card\">\n                    Patronus: {characterSelected.patronus}\n                  </li>\n                  : null\n                }\n                {characterSelected.yearOfBirth ?\n                  <li className=\"birth-card\">\n                    Nació en {characterSelected.yearOfBirth}\n                  </li>\n                  :\n                  null\n                }\n                {characterSelected.alive !== undefined &&\n                  <li className=\"alive-card\">\n                    {characterSelected.alive ? '¡Está viv@!'\n                      :\n                      'RIP :('\n                    }\n                  </li>\n                }\n              </div>\n            </ol>\n          </div>\n          :\n          <p>Cargando...</p>\n        }\n\n      </Fragment >\n    );\n  }\n}\n\nCardDetail.propTypes = {\n  param: PropTypes.number,\n  characters: PropTypes.array,\n};\n\nexport default CardDetail;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './CardNavigation.scss';\n\nclass CardNavigation extends Component {\n  render() {\n    const { param } = this.props;\n    const previuosCharacter = param - 1;\n    const nextCharacter = param + 1;\n    const currentCharacter = param + 1;\n\n    const { characters } = this.props;\n\n    return (\n      <div className=\"nav-wrapper\">\n        <nav className=\"nav-card\">\n          {param > 0 ?\n            <Link\n              className=\"link-card\"\n              to={`/detail/${previuosCharacter}`}>\n              Ver anterior\n            </Link>\n            :\n            <Link\n              className=\"link-card\"\n              to={`/detail/${characters.length-1}`}>\n              Avanzar al {characters.length}\n            </Link>\n          }\n          <p className=\"info-card\">\n            Estás viendo al personaje {currentCharacter} de {characters.length}\n          </p>\n          {param < 24 ?\n            <Link\n              className=\"link-card\"\n              to={`/detail/${nextCharacter}`}>\n              Ver siguiente\n            </Link>\n            :\n            <Link\n              className=\"link-card\"\n              to={`/detail/${0}`}>\n              Volver al 1\n            </Link>\n          }\n        </nav>\n      </div>\n    );\n  }\n}\n\nCardNavigation.propTypes = {\n  param: PropTypes.number,\n  characters: PropTypes.array,\n};\n\nexport default CardNavigation;","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport CardDetail from './components/CardDetail';\nimport CardNavigation from './components/CardNavigation';\nimport PropTypes from 'prop-types';\nimport './CharacterCard.scss';\n\nclass CharacterCard extends Component {\n  componentWillUnmount() {\n    this.props.resetInputValue();\n  }\n\n  render() {\n    const { param, characters } = this.props;\n    return (\n      <Fragment>\n        <Link\n          className=\"link-card link-back\"\n          to=\"/\">\n          Volver a la lista de personajes\n        </Link>\n\n        <CardDetail\n          param={param}\n          characters={characters}\n        />\n\n        <CardNavigation\n          param={param}\n          characters={characters}\n        />\n      </Fragment >\n    );\n  }\n}\n\nCharacterCard.propTypes = {\n  resetInputValue: PropTypes.func,\n  param: PropTypes.number,\n  characters: PropTypes.array,\n};\n\nexport default CharacterCard;","import React, { Component } from 'react';\nimport './Footer.scss';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <ul className=\"footer-list\">\n          <li className=\"footer-thanks\">\n            ¡Gracias por tu visita!\n          </li>\n          <li className=\"footer-github\">\n            <p className=\"github-text\">\n              Puedes ver más repos chachis aquí\n            </p>\n            <a\n              className=\"github-link\"\n              href=\"https://github.com/leireriel\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n              <i className=\"fab fa-github\"></i>\n              github.com/leireriel\n            </a>\n          </li>\n        </ul>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;","import React, { Component, Fragment } from 'react';\nimport { fetchCharacters } from './services/fetchCharacters';\nimport Header from './components/Header/index';\nimport Filters from './components/Filters/index';\nimport CharacterList from './components/CharacterList/index';\nimport CharacterCard from './components/CharacterCard/index';\nimport Footer from './components/Footer/index';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      characters: [],\n      inputValue: ''\n    }\n\n    this.getCharacters = this.getCharacters.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.resetInputValue = this.resetInputValue.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCharacters();\n  }\n\n  getCharacters() {\n    fetchCharacters()\n      .then(data => {\n        const finalData = data.map((item, index) => {\n          return { ...item, id: (index) };\n        });\n        this.setState({\n          characters: finalData\n        });\n      });\n  }\n\n  handleInputChange(event) {\n    const triggerValue = event.currentTarget.value.toLowerCase();\n    this.setState({\n      inputValue: triggerValue\n    })\n  }\n\n  resetInputValue() {\n    this.setState({\n      inputValue: ''\n    })\n  }\n\n  render() {\n    const { characters, inputValue } = this.state;\n    return (\n      <Fragment>\n        <Header/>\n        <main className=\"main\">\n          <Switch>\n\n            <Route exact path=\"/\" render={() =>\n              <Fragment>\n                <Filters\n                  action={this.handleInputChange}\n                />\n                <CharacterList\n                  characters={characters}\n                  inputValue={inputValue}\n                />\n              </Fragment>\n            } />\n\n            <Route path=\"/detail/:character\" render={paramPicker =>\n              <CharacterCard\n                param={parseInt(paramPicker.match.params.character)}\n                characters={characters}\n                resetInputValue={this.resetInputValue}\n              />\n            } />\n\n          </Switch>\n        </main>\n        <Footer/>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","const ENDPOINT = 'https://hp-api.herokuapp.com/api/characters';\n\nconst fetchCharacters = () => fetch(ENDPOINT).then(res => res.json())\n\nexport {fetchCharacters};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}